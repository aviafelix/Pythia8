1) First edit file "config.csh" if you use the csh or tcsh shells,
   else edit "config.sh". (If in doubt, use "echo $SHELL" to find out.)
   Put there the locations of available libraries. If some libraries 
   are unavailable, comment out the respective lines. 
   If a compiled Pythia6 is unavailable, the source code included in 
   this distribution will be used to build the local library. 
   If HepMC or CLHEP are unavailable, the HepMC interface library will 
   not be built and some examples will be impossible to use. 
   The program will work perfectly well standalone, however.

2) Type "source config.csh" for csh and tcsh shells, else type
   "source config.sh". This makes the above library paths take effect.

3) Type "gmake" or "make". This will create the libraries (up to three 
   of them). On Linux systems gmake and make are usually equivalent.
   For others, in case of doubt, use gmake. This applies below as well.

4) The libraries should now be ready for use. To study some examples,
   go to the "examples" subdirectory. There you can use "gmake mainNN",
   for NN a two-digit number corresponding to one of the existing examples.
   This will build an executable "mainNN.exe", that you then can run
   with "./mainNN.exe > outputfile" (where the initial "./" may not 
   be necessary). 
   
5) Typing "gmake clean" will remove all temporary files, except any 
   output files you may have created during your test runs. (If you do 
   it in the main directory it will apply to all subdirectories, if in
   examples then only for that subdirectory.) 

There are no shared libraries for the moment.

To learn more about the current program:

A) A brief self-contained introduction is found in the pythia8051.pdf
   file.

B) Details can be found by opening a web browser on the 
   doc/Welcome.html file, and then navigating among the pages 
   in the index there.   