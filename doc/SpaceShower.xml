<chapter name="Spacelike Showers">

<h2>Spacelike Showers</h2>

The PYTHIA algorithm for spacelike initial-state showers is 
based on the recent article <ref>Sjo05</ref>, where a 
transverse-momentum-ordered backwards evolution scheme is introduced. 
This algorithm is a further development of the virtuality-ordered one 
presented in <ref>Sj085</ref>, with matching to first-order matrix 
element for <ei>Z^0</ei>, <ei>W^+-</ei> and Higgs (in the 
<ei>m_t -> infinity</ei> limit) production as introduced in 
<ref>Miu99</ref>. 

<p/>
The normal user is not expected to call <code>SpaceShower</code> 
directly, but only have it called from <code>Pythia</code>, 
via <code>PartonLevel</code>. Some of the parameters below, 
in particular <code>SpaceShower:alphaSvalue</code>, 
would be of interest for a tuning exercise, however. 

<h3>Main variables</h3>

The maximum <ei>pT</ei> to be allowed in the shower evolution is
related to the nature of the hard process itself. It involves a
delicate balance between not doublecounting and not leaving any
gaps in the coverage. The best procedure may depend on information 
only the user has: how the events were generated and mixed (e.g. with 
Les Houches Accord external input), and how they are intended to be 
used. Therefore a few options are available, with a sensible default 
behaviour.
<mode name="SpaceShower:pTmaxMatch" default="0" min="0" max="2">
Way in which the maximum shower evolution scale is set to match the 
scale of the hard process itself.
<option value="0"><i>(i)</i> if the final state of the hard process 
(not counting subsequent resonance decays) contains at least one quark 
(<ei>u, d, s, c ,b</ei>), gluon or photon then <ei>pT_max</ei> 
is chosen to be the factorization scale for internal processes 
and the <code>scale</code> value for Les Houches input; 
<i>(ii)</i> if not, emissions are allowed to go all the way up to 
the kinematical limit. 
The reasoning is that in the former set of processes the ISR
emission of yet another quark, gluon or photon could lead to
doublecounting, while no such danger exists in the latter case.
</option>
<option value="1">always use the factorization scale for an internal
process and the <code>scale</code> value for Les Houches input, 
i.e. the lower value. This should avoid doublecounting, but
may leave out some emissions that ought to have been simulated.
</option>
<option value="2">always allow emissions up to the kinematical limit.
This will simulate all possible event topologies, but may lead to
doublecounting.
</option>
<note>Note:</note>These options only apply to the hard interaction.
Emissions off subsequent multiple interactions are always constrainted
to be below the factorization scale of the process itself.  
</mode>

<p/>
The amount of QCD radiation in the shower is determined by 
<parameter name="SpaceShower:alphaSvalue" default="0.127" 
min="0.06" max="0.25">
The <ei>alpha_strong</ei> value at scale <code>M_Z^2</code>. 
Default value is picked equal to the one used in CTEQ 5L.  
</parameter>

<p/>
The actual value is then regulated by the running to the scale 
<ei>pT^2</ei>, at which it is evaluated
<mode name="SpaceShower:alphaSorder" default="1" min="0" max="2">
Order at which <ei>alpha_strong</ei> runs,
<option value="0">zeroth order, i.e. <ei>alpha_strong</ei> is kept 
fixed.</option>
<option value="1">first order, which is the normal value.</option>
<option value="2">second order. Since other parts of the code do 
not go to second order there is no strong reason to use this option, 
but there is also nothing wrong with it.</option>
</mode>

<p/>
QED radiation is currently regulated by 
<code>StandardModel:alphaEMfix</code>,
since no QED running is implemented in the shower.

<p/>
There are two complementary ways of regularizing the small-<ei>pT</ei> 
divergence, a sharp cutoff and a smooth dampening. These can be 
combined as desired but it makes sense to coordinate with how the 
same issue is handled in multiple interactions.

<flag name="SpaceShower:samePTasMI" default="on">
Regularize the <ei>pT -> 0</ei> divergence using the same sharp cutoff 
and smooth dampening parameters as used to describe multiple interactions.
That is, the <code>MultipleInteractions:pT0Ref</code>, 
<code>MultipleInteractions:ecmRef</code>, 
<code>MultipleInteractions:ecmPow</code> and 
<code>MultipleInteractions:pTmin</code> parameters are used to regularize 
all ISR QCD radiation, rather than the corresponding parameters below. 
This is a sensible physics ansatz, based on the assumption that colour 
screening effects influence both MI and ISR in the same way. Photon 
radiation is regularized separately in either case.
<note>Warning:</note>if a large <code>pT0</code> is picked for multiple 
interactions, such that the integrated interaction cross section is 
below the nondiffractive inelastic one, this <code>pT0</code> will 
automatically be scaled down to cope. Information on such a rescaling 
does NOT propagate to <code>SpaceShower</code>, however.
</flag> 

<p/>
The actual <code>pT0</code> parameter used at a given cm energy scale, 
<ei>ecmNow</ei>, is obtained as
<eq>
    pT0 = pT0(ecmNow) = pT0Ref * (ecmNow / ecmRef)^ecmPow 
</eq>
where <ei>pT0Ref</ei>, <ei>ecmRef</ei> and <ei>ecmPow</ei> are the 
three parameters below.

<parameter name="SpaceShower:pT0Ref" default="2.2" 
min="0.5" max="10.0">
Regularization of the divergence of the QCD emission probability for 
<ei>pT -> 0</ei> is obtained by a factor <ei>pT^2 / (pT0^2 + pT^2)</ei>, 
and by using an <ei>alpha_s(pT0^2 + pT^2)</ei>. An energy dependence 
of the <ei>pT0</ei> choice is introduced by the next two parameters, 
so that <ei>pT0Ref</ei> is the <ei>pT0</ei> value for the reference 
cm energy, <ei>pT0Ref = pT0(ecmRef)</ei>.   
</parameter>

<parameter name="SpaceShower:ecmRef" default="1800.0" min="1.">
The <ei>ecmRef</ei> reference energy scale introduced above.
</parameter>

<parameter name="SpaceShower:ecmPow" default="0.16" 
min="0." max="0.5">
The <ei>ecmPow</ei> energy rescaling pace introduced above.
</parameter>

<parameter name="SpaceShower:pTmin" default="0.2" 
min="0.1" max="10.0">
Lower cutoff in <ei>pT</ei>, below which no further ISR branchings 
are allowed. Normally the <ei>pT0</ei> above would be used to 
provide the main regularization of the branching rate for 
<ei>pT -> 0</ei>, in which case <ei>pTmin</ei> is used  mainly for 
technical reasons. It is possible, however, to set <ei>pT0Ref = 0</ei> 
and use <ei>pTmin</ei> to provide a step-function regularization, 
or to combine them in intermediate approaches. Currently <ei>pTmin</ei> 
is taken to be energy-independent.  
</parameter>

<parameter name="SpaceShower:pTminChgQ" default="0.5" min="0.01">
Parton shower cut-off <ei>pT</ei> for photon coupling to a coloured 
particle.
</parameter>

<parameter name="SpaceShower:pTminChgL" default="0.0005" min="0.0001">
Parton shower cut-off mass for pure QED branchings. 
Assumed smaller than (or equal to) <ei>pTminChgQ</ei>.
Actually, ISR cascades of incoming leptons have not been implemented 
so far, so should not be used!??
</parameter>

<h3>Further variables</h3>

These should normally not be touched. Their only function is for
cross-checks.

<p/>
There are three flags you can use to switch on or off selected
branchings in the shower: 

<flag name="SpaceShower:QCDshower" default="on">
Allow a QCD shower; on/off = true/false.
</flag>

<flag name="SpaceShower:QEDshowerByQ" default="on">
Allow quarks to radiate photons; on/off = true/false.
</flag>

<flag name="SpaceShower:QEDshowerByL" default="on">
Allow leptons to radiate photons; on/off = true/false.
</flag>

<p/>
There are three further possibilities to simplify the shower:

<flag name="SpaceShower:MEcorrections" default="on">
Use of matrix element corrections; on/off = true/false.
</flag>

<flag name="SpaceShower:phiPolAsym" default="on">
Azimuthal asymmetry induced by gluon polarization; on/off = true/false.
Not yet implemented. 
</flag>

<mode name="SpaceShower:nQuark" default="5" min="0" max="5">
Number of allowed quark flavours in <ei>g -> q qbar</ei> branchings,
when kinematically allowed. Changing it to 4 would forbid 
<ei>g -> b bbar</ei>, etc.
</mode>

<h3>Technical notes</h3>

Almost everything is equivalent to the algorithm in [1]. Minor changes 
are as follows.
<ul>
<li>
It is now possible to have a second-order running <ei>alpha_s</ei>,
in addition to fixed or first-order running. 
</li>
<li>
The description of heavy flavour production in the threshold region 
has been modified, so as to be more forgiving about mismatches 
between the <ei>c/b</ei>  masses used in Pythia relative to those 
used in a respective PDF parametrization. The basic idea is that, 
in the threshold region of a heavy quark <ei>Q</ei>, <ei>Q = c/b</ei>, 
the effect of subsequent <ei>Q -> Q g</ei> branchings is negligible. 
If so, then
<eq>
   f_Q(x, pT2) = integral_mQ2^pT2  dpT'2/pT'2 * alpha_s(pT'2)/2pi
      * integral P(z) g(x', pT'2) delta(x - z x')
</eq>
so use this to select the <ei>pT2</ei> of the <ei>g -> Q Qbar</ei> 
branching. In the old formalism the same kind of behaviour should 
be obtained, but by a cancellation of a <ei>1/f_Q</ei> that diverges 
at the theshold and a Sudakov that vanishes.
<br/>
The strategy therefore is that, once <ei>pT2 &lt; f * mQ2</ei>, with 
<ei>f</ei> a parameter of the order of 2, a <ei>pT2</ei> is chosen 
like <ei>dpT2/pT2</ei> between <ei>mQ2</ei> and <ei>f * mQ2</ei>, a
nd a <ei>z</ei> flat in the allowed range. Thereafter acceptance
is based on the product of three factors, representing the running
of <ei>alpha_strong</ei>, the splitting kernel (including the mass term) 
and the gluon density weight. At failure, a new <ei>pT2</ei> is chosen 
in the same  range, i.e. is not required to be lower since no Sudakov 
is involved. 
</li>
</ul>

</chapter>

<!-- Copyright C 2006 Torbjorn Sjostrand -->

