<chapter name="Main-Program Parameters">

<h1>Main-Program Parameters</h1>

<h2>Introduction</h2>

The main program is up to the user to write. However, sample main
programs are provided. In one such class of programs, one may 
wish to read in key parameters of the run from a "cards file". 
In this file some such parameters are defined, and made available
inside the <ci>Settings</ci> machinery. They can thus be put among 
the other cards, and then read back in by the main program. 

<h2>Run parameters</h2>

Here comes a first batch of parameters that can be set in an input
"cards" file, and thereafter read out an used in the user-written 
main program. Usage is purely optional. 

<mode name="Main:numberOfEvents" default="1000" min="0">
The number of events to be generated.
</mode>

<mode name="Main:numberToList" default="2" min="0">
The number of events to list.
</mode>

<mode name="Main:timesToShow" default="50" min="0">
Print the number of events generated so far, this many times, 
i.e. once every numberOfEvents/numberToShow events.
</mode>

<mode name="Main:timesAllowErrors" default="10" min = "0">
Allow this many times that pythia.next() returns false, i.e.
that an event is flawed, before aborting the run.
</mode>

<flag name="Main:showChangedSettings" default="true">
Print a list of the changed flag/mode/parameter settings.
</flag>

<flag name="Main:showAllSettings" default="false">
Print a list of all flag/mode/parameter settings.
</flag>

<flag name="Main:showChangedParticleData" default="false">
Print a list of particle and decay data for those particles 
that were changed (one way or another).
</flag>

<flag name="Main:showAllParticleData" default="false">
Print a list of all particle and decay data.
</flag>

<h2>Incoming beams</h2>

Normally the identities and energies of the two incoming beam particles 
are given by the parameters of the init call. These parameters can be
stored in an input "cards" file, in the following variables, and 
thereafter read out an used in the user-written main program. Usage is 
purely optional. 

<mode name="Main:idBeamA" default="2212">
The PDG <ci>id</ci> code for the first incoming particle.
</mode>

<mode name="Main:idBeamB" default="2212">
The PDG <ci>id</ci> code for the second incoming particle.
</mode>

<flag name="Main:inCMframe" default="true">
Assume collisions occur in the CM frame.
</flag>

<parameter name="Main:eCM" default="1960." min="10.">
Collision CM energy, to be given if <ci>Main:inCMframe</ci> is true. 
</parameter>

<parameter name="Main:eBeamA" default="7000." min="0.">
The energy of the first incoming particle, moving in the 
<ei>+z </ei>direction. If the particle energy is smaller than its mass
it is assumed to be at rest. 
</parameter>

<parameter name="Main:eBeamB" default="7000." min="0."> 
The energy of the second incoming particle, moving in the 
<ei>-z</ei> direction. If the particle energy is smaller than its mass
it is assumed to be at rest.
</parameter>

<h2>Sample main programs</h2>

To help exemplify what a main program could look like, a few simple
examples are provided: 

<ul>

<li>main01.cc : a fairly extensive study of event properties,
with hard processes generated by Pythia6, and making use of a 
<ci>main01.cmnd</ci> "cards file" illustrating many of the 
parameters listed on these pages.</li>

<li>main02.cc : a study of top events, fed in via the Les Houches 
Accord interface from the files <ci>ttsample.init</ci> and 
<ci>ttsample.evnt</ci>. These currently only contain 100 events, 
so this program is  mainly a demonstration of principles. 
The Fortran program <ci>main02for.f</ci> has been used to generate 
the input files. This program can be modified and linked to 
<ci>Pythia6.o</ci> to generate other files, always in pairs.</li> 

<li>main03.cc : an example how the Les Houches Accord interface.
Can be used to input various toy parton-level configurations,
e.g. to study the hadronization of junction topologies.</li>

<li>main04.cc : shows how an external decay handler can be linked
to handle the decays of some particles.</li>

<li>main05.cc : shows how an external random number generator can be 
linked to handle this task.</li>

<li>main06.cc : a semirealistic example how the <ei>pT</ei> spectrum 
of Z bosons at the Tevatron can be studied. (Brief example given in 
talks.)</li>

<li>main07.cc : a simple (cf. main01) study of event properties,
with hard processes generated by Pythia6, and making use of a 
<ci>main07.cmnd</ci> "cards file" illustrating many of the 
parameters listed below. (Brief example given in talks.)</li>

<li>main08.cc : a simple (cf. main02) study of top events, fed in via 
the Les Houches Accord interface from the files <ci>ttsample.init</ci> 
and <ci>ttsample.evnt</ci>. These again were generated with main02.f.
(Brief example given in talks.)</li>

<li>main09.cc : generation of LEP1 hadronic events, i.e. 
<ei>e^+e^- -> gamma*/Z0 -> q qbar</ei>, with charged multiplicity 
and sphericity analysis. So far no ISR possible.</li>

<li>main10.cc : generation of QCD jet events at the LHC, with jet
analysis using the CellJet cone jet finder.</li>

<li>main11.cc : similar to main01, except that the event record is 
output in the HepMC event record format. Requires that HepMC and
CLHEP are properly linked.</li>

<li>main12.cc : first tests of internally implemented cross sections,
easily compared with the corresponding Pythia6 ones.</li>

</ul>

</chapter>

<!-- Copyright C 2006 Torbjorn Sjostrand -->
