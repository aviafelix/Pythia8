<chapter name="Fragmentation">

<h1>Fragmentation</h1>

Fragmentation in Pythia is based on the Lund string model [1, 2].
Several different aspects are involved in the physics description,
which  here therefore is split accordingly. This also, at least
partly, reflect the set of classes involved in the fragmentation 
machinery.

<p/>
The variables collected here have a very wide span of usefulness.
Some would be central in any hadronization tuning exercise, others
should not be touched except by experts.

<p/>
The fragmentation flavour-choice machinery is also used in a few 
other places of the program, notably particle decays, and is thus
described on the separate Flavour Selection page.

<h2>Fragmentation functions</h2>

The <ci>StringZ</ci> class handles the choice of longitudinal 
lightcone fraction <ei>z</ei> according to one of two possible 
shape sets.

<p/>
The Lund symmetric fragmentation function [1] is the only alternative 
for light quarks. It is of the form
<eq> 
    f(z) = (1/z) * (1-z)^a * exp(-b m_T^2 / z)
</eq>
with the two main free parameters <ei>a</ei> and <ei>b</ei> to be 
tuned to data. They are stored in 

<parameter name="StringZ:aLund" default="0.3" min="0.0" max="2.0">
The <ei>a</ei> parameter of the Lund symmetric fragmentation function.
</parameter>

<parameter name="StringZ:bLund" default="0.58" min="0.2" max="2.0">
The <ei>b</ei> parameter of the Lund symmetric fragmentation function.
</parameter>

<p/>
In principle, each flavour can have a different <ei>a</ei>. Then,
for going from an old flavour <ei>i</ei> to a new <ei>j</ei> one 
the shape is 
<eq> 
    f(z) = (1/z) * z^{a_i} * ((1-z)/z)^{a_j} * exp(-b * m_T^2 / z)
</eq>
This is only implemented for diquarks relative to normal quarks:

<parameter name="StringZ:aExtraDiquark" default="0.5" 
min="0.0" max="2.0">
allows a larger <ei>i</ei> for diquarks, with total 
<ei>a = aLund + aExtraDiquark</ei>.
</parameter>

<p/>
Finally, the Bowler modification [3] introduces an extra factor
<eq>
    1/z^{r_Q * b * m_Q^2)
</eq>
for heavy quarks. To keep some flexibility, a multiplicative factor
<ei>r_Q</ei> is introduced, which ought to be unity but can be set in

<parameter name="StringZ:rFactC" default="1.0" min="0.0" max="2.0">
<ei>r_c</ei>, i.e. the above parameter for <ei>c</ei> quarks.
</parameter>

<parameter name="StringZ:rFactB" default="1.0" min="0.0" max="2.0">
<ei>r_b</ei>, i.e. the above parameter for <ei>b</ei> quarks.
</parameter>

<parameter name="StringZ:rFactH" default="1.0" min="0.0" max="2.0">
<ei>r_h</ei>, i.e. the above parameter for heavier hypothetical quarks,
or in general any new coloured particle long-lived enough to hadronize.
</parameter>

<p/>
As an alternative, it is possible to switch over to the 
Peterson/SLAC formula [4]
<eq>
     f(z) = 1 / ( z * (1 - 1/z - epsilon/(1-z))^2 )
</eq>
for charm, bottom and heavier (defined as above) by the three flags

<flag name="StringZ:usePetersonC" default="off">
use Peterson for <ei>c</ei> quarks.
</flag>

<flag name="StringZ:usePetersonB" default="off">
use Peterson for <ei>c</ei> quarks.
</flag>

<flag name="StringZ:usePetersonH" default="off">
use Peterson for hypothetical heavier quarks.
</flag>

When switched on, the corresponding epsilon values are chosen to be

<parameter name="StringZ:epsilonC" default="0.05" min="0.01" max="0.25">
<ei>epsilon_c</ei>, i.e. the above parameter for <ei>c</ei> quarks.
</parameter>

<parameter name="StringZ:epsilonB" default="0.005" min="0.001" max="0.025">
<ei>epsilon_b</ei>, i.e. the above parameter for <ei>b</ei> quarks.
</parameter>

<parameter name="StringZ:epsilonH" default="0.005" min="0.0001" max="0.25">
<ei>epsilon_h</ei>, i.e. the above parameter for hypothetical heavier 
quarks, normalized to the case where <ei>m_h = m_b</ei>. The actually 
used parameter is then <ei>epsilon = epsilon_h * (m_b^2 / m_h^2)</ei>.
This allows a sensible scaling to a particle with an unknown higher
mass without the need for a user intervention. 
</parameter>

<h2>Fragmentation <ei>pT</ei></h2>

The <ci>StringPT</ci> class handles the choice of fragmentation <ei>pT</ei>. 
At each string breaking the quark and antiquark of the pair are
supposed to receive opposite and compensating <ei>pT</ei> kicks according
to a Gaussian distribution in <ei>p_x</ei> and <ei>p_y</ei> separately. 
Call <ei>sigma_q</ei> the width of the <ei>p_x</ei> and <ei>p_y</ei> 
distributions separately, i.e.
<eq>
    d(Prob) = exp( -(p_x^2 + p_y^2) / 2 sigma_q^2).
</eq>
Then the total squared width is 
<eq>
    &lt;pT^2> = &lt;p_x^2> +  &lt;p_y^2> = 2 sigma_q^2 = sigma^2.
</eq>
It is this latter number that is stored in

<parameter name="StringPT:sigma" default="0.36" min="0.0" max="1.0">
the width <ei>sigma</ei> in the fragmentation process.
</parameter>

<p/>
Since a normal hadron receives <ei>pT</ei> contributions for two string 
breakings, it has a <ei>&lt;p_x^2>_had = &lt;p_y^2>_had = sigma^2</ei>, 
and thus <ei>&lt;pT^2>_had = 2 sigma^2</ei>.  

<p/>
Some studies on isolated particles at LEP has indicated the need for 
a slightly enhanced rate in the high-<ei>pT</ei> tail of the above 
distribution. This would have to be reviewed in the context of a 
complete retune of parton showers and hadronization, but for the 
moment we stay with the current recipe, to boost the above <ei>pT</ei> 
by a factor <ei>enhancedWidth</ei> for a small fraction 
<ei>enhancedFraction</ei> of the breakups, where

<parameter name="StringPT:enhancedFraction" default="0.1" 
min="0.0" max="0.1">
<ei>enhancedFraction</ei>,the fraction of string breaks with enhanced 
width.
</parameter>

<parameter name="StringPT:enhancedWidth" default="2.0" 
min="1.0" max="5.0">
<ei>enhancedWidth</ei>,the enhancement of the width in this fraction.
</parameter>

<h2>Jet joining procedure</h2>

String fragmentation is carried out iteratively from both string ends 
inwards, which means that the two chains of hadrons have to be joined up 
somewhere in the middle of the event. This joining is described by
parameters that in principle follows from the standard fragmentation
parameters, but in a way too complicated to parametrize. The dependence
is rather mild, however, so for a sensible range of variation the 
parameters in this section should not be touched.

<parameter name="StringFragmentation:stopMass" default="1.0" 
min="0.0" max="2.0">
Is used to define a <ei>W_min = m_q1 + m_q2 + stopMass</ei>,
where <ei>m_q1</ei> and <ei>m_q2</ei> are the masses of the two 
current endpoint quarks or diquarks. 
</parameter>

<parameter name="StringFragmentation:stopNewFlav" default="2.0" 
min="0.0" max="2.0">
Add to <ei>W_min</ei> an amount <ei>stopNewFlav * m_q_last</ei>, 
where <ei>q_last</ei> is the last <ei>q qbar</ei> pair produced 
between the final two hadrons.
</parameter>

<parameter name="StringFragmentation:stopSmear" default="0.2" 
min="0.0" max="0.5">
The <ei>W_min</ei> above is then smeared uniformly in the range
<ei>W_min_smeared = W_min * [ 1 - stopSmear, 1 + stopSmear ]</ei>.
</parameter>

This <ei>W_min_smeared</ei> is then compared with the current remaining
<ei>W_transverse</ei> to determine if there is energy left for further
particle production. If not, i.e. if 
<ei>W_transverse &lt; W_min_smeared</ei>, the final two particles are 
produced from what is currently left, if possible. (If not, the 
fragmentation process is started over.)

<h2>Simplifying systems</h2>

There are a few situations when it is meaningful to simplify the
original task, one way or another.

<parameter name="HadronLevel:mStringMin" default="1." 
min="0.5" max="1.5">
Decides whether a partonic system should be considered as a normal
string or a ministring, the latter only producing one or two primary
hadrons. The system mass should be above <ei>mStringMin</ei> plus the 
sum of quark/diquark constituent masses for a normal string description,
else the ministring scenario is used.
</parameter>

<parameter name="FragmentationSystems:mJoin" default="0.1" 
min="0." max="1.">
When two colour-connected partons are very nearby, with at least 
one being a gluon, they can be joined into one, to avoid technical 
problems of very small string regions. The requirement for joining is 
that the invariant mass of the pair is below <ei>mJoin</ei>, where a 
gluon only counts with half its momentum, i.e. with its contribution 
to the string region under consideration.
</parameter>

<parameter name="FragmentationSystems:mJoinJunction" default="1.0"
min="0.5" max="2.">
When the invariant mass of two of the quarks in a three-quark junction 
string system becomes too small, the system is simplified to a 
quark-diquark simple string. The requirement for this simplification 
is that the diquark mass, minus the two quark masses, falls below 
<eq>mJoinJunction</eq>. Gluons on the string between the junction and 
the respective quark, if any, are counted as part of the quark 
four-momentum. Those on the two combined legs are clustered with the 
diquark when it is formed.
</parameter>

<h2>Ministrings</h2>

The <ci>MiniStringFragmentation</ci> machinery is only used when a string 
system has so small invariant mass that normal string fragmentation
is difficult/impossible. Instead one or two particles are produced,
in the former case shuffling energy-momentum relative to another
colour singlet system in the event, while preserving the invariant
mass of that system. With one exception parameters are the same as 
defined for normal string fragmentation, to the extent that they are 
at all applicable in this case.

A discussion of the relevant physics is found in [5]. The current
implementation does not completely abide to the scheme presented 
there, however, but has in part been simplified. (In part for greater 
clarity, in part since the class is not quite finished yet.) 

<mode name="MiniStringFragmentation:nTry" default="2" min="1" max="10">
Whenever the machinery is called, first this many attempts are made
to pick two hadrons that the system fragments to. If the hadrons are 
too massive the attempt will fail, but a new subsequent try could
involve other flavour and hadrons and thus still succeed. 
After <ei>nTry</ei> attempts, instead an attempt is made to produce a 
single hadron from the system. Should also this fail, some further
attempts at obtaining two hadrons will be made before eventually 
giving up.
</mode>

<h2>Junction treatment</h2>

A junction topology corresponds to an Y arrangement of strings
i.e. where three string pieces have to be joined up in a junction.
Such topologies can arise if several valence quarks are kicked out
from a proton beam, or in baryon-number-violating SUSY decays.
Special attention is necessary to handle the region just around
the junction, where the baryon number topologically is located. 
The junction fragmentation scheme is described in [6]. The parameters
in this section should not be touched except by experts.

<parameter name="StringFragmentation:eNormJunction" default="2.0" 
min="0.5" max="10">
Used to find the effective rest frame of the junction, which is
complicated when the three string legs may contain additional
gluons between the junction and the endpoint. To this end,
a pull is defined as a weighed sum of the momenta on each leg, 
where the weight is <ei>exp(- eSum / eNormJunction)</ei>, with 
<ei>eSum</ei> the summed energy of all partons closer to the junction 
than the currently considered one (in the junction rest frame). 
Should in principle be (close to) <ei>sqrt((1 + a) / b)</ei>, with 
<ei>a</ei> and <ei>b</ei> the parameters of the Lund symmetric 
fragmentation function. 
</parameter>

<parameter name="StringFragmentation:eBothLeftJunction" default="1.0" 
min="0.5">
Retry (up to 10 times) when the first two considered strings in to a 
junction both have a remaining energy (in the junction rest frame) 
above this number.
</parameter>

<parameter name="StringFragmentation:eMaxLeftJunction" default="10.0" 
min="0."> 
Retry (up to 10 times) when the first two considered strings in to a 
junction has a highest remaining energy (in the junction rest frame) 
above a random energy evenly distributed between 
<ei>eBothLeftJunction</ei> and 
<ei>eBothLeftJunction + eMaxLeftJunction</ei> 
(drawn anew for each test).
</parameter>

<parameter name="StringFragmentation:eMinLeftJunction" default="0.2" 
min="0."> 
Retry (up to 10 times) when the invariant mass-squared of the final leg 
and the leftover momentum of the first two treated legs falls below 
<ei>eMinLeftJunction</ei> times the energy of the final leg (in the 
junction rest frame). 
</parameter>
   
<h2>References</h2>
 
<ol>

<li>B. Andersson, G. Gustafson, G. Ingelman and T. Sjostrand,
Phys. Rep. 97 (1983) 31</li>

<li>T. Sjostrand, Nucl. Phys. B248 (1984) 469</li>

<li>M.G. Bowler, Z. Phys. C11 (1981) 169</li>
   
<li>C. Peterson, D. Schlatter, I. Schmitt and P. Zerwas, 
Phys. Rev. D27 (1983) 105</li>

<li>E. Norrbin and T. Sjostrand, Eur. Phys. J. C17 (2000) 137</li> 

<li>T. Sjostrand and P.Z. Skands, Nucl. Phys. B659 (2003) 243</li> 

</ol>

</chapter>

<!-- Copyright C 2006 Torbjorn Sjostrand -->

