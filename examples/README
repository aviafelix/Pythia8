----------------------------------------------------------------------

   BASIC INSTRUCTIONS FOR RUNNING TEST PROGRAMS

1) You are supposed to have already compiled PYTHIA 8, as described in 
   the README file of the mother directory. For the moment we assume
   that you will NOT use the HepMC, LHAPDF or PYTHIA 6.4 libraries.

2) You are now ready to test run the first ten of the mainNN examples 
   listed below. Type "gmake mainNN" to build an executable "mainNN.exe".
   Type "./mainNN.exe > outputfile" to run this executable. 
   Then study the outputfile. The existing files outNN are examples of 
   possible outputs from several runs, so that you can compare.

3) If you want to run your own programs from this directory you can edit
   the "Makefile", adding the name of your main program to the already
   existing ones. Note that different cases exist, depending on which 
   external libraries are to be linked.

4) Type "gmake clean" to clean up the examples directory (but not the
   output files).

----------------------------------------------------------------------

   ADVANCED INSTRUCTIONS FOR RUNNING TEST PROGRAMS

1) If you want to be able to run examples linked to HepMC you should 
   already have set that up with the "configure" command in the mother 
   directory. If not, you can go back and do it now. This will create 
   files "config.csh" and "config.sh" in the current directory.

2) If you are going to run examples linked with LHAPDF and/or PYTHIA 6.4,
   you should as a first step run the script "configure" in the current 
   directory. Similarly to what is described in the README file of the 
   mother directory, two distinct ways exist.

2.1) If you have access to the CERN AFS external area you can run
     "configure" with command-line arguments to set up the desired 
     library links. The possible options are:
     --help : prints a brief summary of the options described here.
     --enable-debug : turns on debugging flags and turns off optimization
     --enable-shared : use shared library (not yet implem.) (default no)
     --with-lhapdfversion : LHAPDF version (to be taken from CERN AFS 
       MCGenerators, must be in version 5 series, e.g. =5.2.3)
     --with-pythia6version : PYTHIA 6 version (to be taken from CERN AFS 
       MCGenerators, should be in 4xx series, e.g. =410)
 
2.2) If not, you have to edit the "configure" file by hand before you run 
     it, to provide the paths where you have the respective libraries 
     installed on your local platform. Search in the "configure" file for   
       LHAPDFLOCATION
       PYTHIA6LOCATION

   When "configure" is run it will create or append to the config.csh 
   and config.sh files.

3) Before running the examples using external libraries for the first 
   time, type "source config.csh" if you use the csh or tcsh shell, or 
   "source config.sh" otherwise. (Use "echo $SHELL" if uncertain.)
   This will set or append the environment variables LD_LIBRARY_PATH,
   needed to find the HepMC and CLHEP libraries. (Eventually also LHAPDF
   and PYTHIA 6.4 libraries, if shared ones are used. Default, if taken
   from CERN AFS MCGenerators, is archive.) It will also set the variable 
   LHAPATH, needed to find the LHAPDF data files.

4) If you want to change to other LHAPDF or PYTHIA 6 versions, you have
   to rerun the script "configure" and again "source" one of the config.*
   files. In case of using shared libraries (these will  be taken if both 
   shared and archive ones are on the same path) pay attention to the 
   variable LD_LIBRARY_PATH: subsequent commands "source" will add new 
   items to it, not substitute the old ones. As a result, the wrong 
   version can still be loaded at runtime, which can cause relocation 
   errors. A simple solution is to repeat the "configure" and "source" 
   steps in a new window, i.e. in a new clean copy of the shell.

----------------------------------------------------------------------

   LIST OF TEST PROGRAMS

1) main01 - main12 only use the PYTHIA 8 library
* main01.cc : brief example with charged multiplicity distribution
* main02.cc : brief example with Z0 pT spectrum
* main03.cc & main03.cmnd : simple single-particle analysis in jet events
* main04.cc & main04.cmnd : simple tests of event properties
* main05.cc : cone-jet analysis of LHC events
* main06.cc & main06.cmnd : study elastic/diffractive events
* main07.cc & main07.cmnd : study minimum-bias events
* main08.cc : combine results of subruns in separate pT bins
* main09.cc : LEP events with sphericity/thrust/jetfinder analysis
* main10.cc : implement UserHooks to interact with the generation process
* main11.cc : set two hard interactions in the same event
* main12.cc & ttbar.lhe : generate events from a Les Houches Event File 
* main13.cc : compare several cross sections with their Pythia 6.4 values. 

2) main21 - main25 are examples how some external programs could be linked
* main21.cc : Les Houches tricked to study fixed parton configurations
* main22.cc & main22.cmnd : & main22.spc supersymmetry production using SLHA
* main23.cc : how to link an external decay handler
* main24.cc : how to link an external random number generator
* main25.cc : how to link an external process to use internally

3) main31 - main32 require linkage to the HepMC event record library
* main31.cc & main31.cmnd : simple example output to HepMC 
* main32.cc & main32.cmnd : streamlined production for HepMC only

4) main41 - main42 require linkage to LHAPDF
* main41.cc : test shape of PDF's
* main42.cc : compare average multiplicity and pT for different PDF's

5) main51 - main54 require linkage to PYTHIA 6.4 (+HepMC once) 
* main51.cc : runtime Les Houches link to PYTHIA 6.4 for simple tests
* main52.cc & main52.ccmnd & main52.fcmnd : ditto with external input 
* main53.f (Fortran!) : have PYTHIA 6.4 generate a Les Houches Event File 
* main54.cc & main54.cmnd : input from PYTHIA 6.4 and output to HepMC

Note: main31, main32 and main54 save HepMC-formatted events on hepmcoutNN.dat;
these files become so big that they have not been included in distribution. 

----------------------------------------------------------------------
