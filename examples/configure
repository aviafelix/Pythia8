#!/bin/sh
#
# Configuration script, to be run before making examples
#
# Author: M. Kirsanov

#
# User-changeable part -------------------------------
#

#LCG platform. Can be needed if external libraries are specified
if [ x$MYLCGPLATFORM = x ]; then
  export MYLCGPLATFORM=slc3_ia32_gcc323
fi

# Defaults
export COMPMODE=OPT

# check arguments

for arg in $* ; do
  if [ "x$arg" = "x--enable-debug" ] ; then
    COMPMODE=DBG
  elif [ "x$arg" = "x--enable-shared" ] ; then
    SHAREDLIBS=yes
  elif [ "x$arg" = "x--help" ] ; then
    echo -e \
    "\nUsage: ./configure [options] , where options are:\n\n"\
    "--help            : prints this help\n"\
    "--enable-debug    : turns on debugging flags and turns off optimization\n"\
    "--enable-shared   : use shared library (not yet implem.) (default no)\n"\
    "--with-pythia6version : pythia6 version (to be taken from CERN afs MCGenerators, e.g. =410)\n"\
    "--with-lhapdfversion : lhapdf version (to be taken from CERN afs MCGenerators, e.g. =5.2.3)\n"
    exit
  elif [ "x${arg}" != "x${arg/=/}" ] ; then
    option=${arg/=*/}
    value=${arg/*=/}
    if [ "x${option}" = "x--with-pythia6version" ] ; then
      PYTHIA6VERSION=${value}
    elif [ "x${option}" = "x--with-lhapdfversion" ] ; then
      LHAPDFVERSION=${value}
    else
      echo "${arg}: wrong option. Ignored." >&2
    fi
  fi
done

echo compilation mode is $COMPMODE


# PYTHIA6 and LHAPDF locations
# The default values here correspond to CERN AFS (but you may want to change
# the version and/or platform).

if [ x${PYTHIA6VERSION} = x ]; then
  export PYTHIA6VERSION=410
fi
export PYTHIA6LOCATION=/afs/cern.ch/sw/lcg/external/MCGenerators/pythia6/${PYTHIA6VERSION}/${MYLCGPLATFORM}/lib/archive
export PYTHIA6LIBNAME="-lpythia6 -lpythia6_dummy -lpythia6_pdfdummy"

if [ x${LHAPDFVERSION} = x ]; then
  export LHAPDFVERSION=5.2.3
fi
export LHAPDFLOCATION=/afs/cern.ch/sw/lcg/external/MCGenerators/lhapdf/${LHAPDFVERSION}/${MYLCGPLATFORM}/lib/archive
export LHAPDFLIBNAME="-llhapdf -llhapdf_dummy"
export LHAPDFSETSLOCATION=/afs/cern.ch/sw/lcg/external/MCGenerators/lhapdf/${LHAPDFVERSION}/share/PDFsets

#
# User-changeable part, experts  -----------------------------
#

# export FFLAGS_OPT="-O2 -Wuninitialized"
# -Wuninitialized outputs many irrelevant warnings and therefore obscurs 
export FFLAGS_OPT="-O2"
export FFLAGS_DBG=-g
export CFLAGS_OPT=-O2
export CFLAGS_DBG=-g
export CXXFLAGS_OPT="-O2 -ansi -pedantic -W -Wall"
export CXXFLAGS_DBG="-g -ansi -pedantic -W -Wall"
#
# Find platform.
#
export ARCH="`uname`"
export theGcc1=`g++ --version | awk '{print$3}'`
export theGcc=`echo ${theGcc1} | awk -F . '{print $1}'`
if [ ${theGcc} = 4 ]; then
  export ARCH=${ARCH}-gcc4
fi
echo Platform is $ARCH

#default platform settings:
export FC=g77
export CC=gcc
export FFLAGS="${FFLAGS_OPT}"
export CFLAGS="${CFLAGS_OPT}"
export CXXFLAGS="${CXXFLAGS_OPT}"
export FLIBS="-lfrtbegin -lg2c"
if [ ${COMPMODE} = OPT ]; then
  export FFLAGS="${FFLAGS_OPT}"
  export CFLAGS="${CFLAGS_OPT}"
  export CXXFLAGS="${CXXFLAGS_OPT}"
fi
if [ ${COMPMODE} = DBG ]; then
  export FFLAGS="${FFLAGS_DBG}"
  export CFLAGS="${CFLAGS_DBG}"
  export CXXFLAGS="${CXXFLAGS_DBG}"
fi
if [ $ARCH = Linux ]; then
  export FC=g77
  export FFLAGS="${FFLAGS_OPT} -Wno-globals"
  export CFLAGS="${CFLAGS_OPT}"
  export CXXFLAGS="${CXXFLAGS_OPT}"
  export FLIBS="-lfrtbegin -lg2c"
  if [ ${COMPMODE} = OPT ]; then
    export FFLAGS="${FFLAGS_OPT}"
    export CFLAGS="${CFLAGS_OPT}"
    export CXXFLAGS="${CXXFLAGS_OPT}"
  fi
  if [ ${COMPMODE} = DBG ]; then
    export FFLAGS="${FFLAGS_DBG} -Wno-globals"
    export CFLAGS="${CFLAGS_DBG}"
    export CXXFLAGS="${CXXFLAGS_DBG}"
  fi
fi
# Linux platform with gcc4: new Fortran90 compiler.
if [ $ARCH = Linux-gcc4 ]; then
  export FC=gfortran
  export FFLAGS="${FFLAGS_OPT}"
  export CFLAGS="${CFLAGS_OPT}"
  export CXXFLAGS="${CXXFLAGS_OPT}"
  export FLIBS="-lgfortran -lgfortranbegin"
  if [ ${COMPMODE} = OPT ]; then
    export FFLAGS="${FFLAGS_OPT}"
    export CFLAGS="${CFLAGS_OPT}"
    export CXXFLAGS="${CXXFLAGS_OPT}"
  fi
  if [ ${COMPMODE} = DBG ]; then
    export FFLAGS="${FFLAGS_DBG}"
    export CFLAGS="${CFLAGS_DBG}"
    export CXXFLAGS="${CXXFLAGS_DBG}"
  fi
fi

#Platform & opt/dbg - independent flags and variables:


#
# End of the user-changeable part ---------------------------
#
# Checks
#
if [ $?PYTHIA6LOCATION ]; then
  if [ x${PYTHIA6LOCATION} != x ]; then
    if [ ! -d ${PYTHIA6LOCATION} ]; then
      echo ERROR in PYTHIA6LOCATION: directory ${PYTHIA6LOCATION} does not exist
    fi
  fi
fi
if [ $?LHAPDFLOCATION ]; then
  if [ x${LHAPDFLOCATION} != x ]; then
    if [ ! -d ${LHAPDFLOCATION} ]; then
      echo ERROR in LHAPDFLOCATION: directory ${LHAPDFLOCATION} does not exist
    fi
    if [ ! -d ${LHAPDFSETSLOCATION} ]; then
      echo ERROR in LHAPDFSETSLOCATION: directory ${LHAPDFSETSLOCATION} does not exist
    fi
  fi
fi

rm -f config.mk

echo SHELL = /bin/sh > config.mk
echo ARCH = ${ARCH} >> config.mk
echo FC = ${FC} >> config.mk
echo CC = ${CC} >> config.mk
echo FFLAGS = ${FFLAGS} >> config.mk
echo CFLAGS = ${CFLAGS} >> config.mk
echo CXXFLAGS = ${CXXFLAGS} >> config.mk
echo FLIBS = ${FLIBS} >> config.mk
#
if [ x${PYTHIA6VERSION} != x ]; then
  echo PYTHIA6VERSION = ${PYTHIA6VERSION} >> config.mk
fi
if [ x${PYTHIA6LOCATION} != x ]; then
  echo PYTHIA6LOCATION = ${PYTHIA6LOCATION} >> config.mk
fi
if [ "x${PYTHIA6LIBNAME}" != "x" ]; then
  echo "PYTHIA6LIBNAME = ${PYTHIA6LIBNAME}" >> config.mk
fi
if [ x${LHAPDFVERSION} != x ]; then
  echo LHAPDFVERSION = ${LHAPDFVERSION} >> config.mk
fi
if [ x${LHAPDFLOCATION} != x ]; then
  echo LHAPDFLOCATION = ${LHAPDFLOCATION} >> config.mk
fi
if [ "x${LHAPDFLIBNAME}" != "x" ]; then
  echo "LHAPDFLIBNAME = ${LHAPDFLIBNAME}" >> config.mk
fi
#
#
# For the moment we take archive libraries of lhapdf, so actions with
# LD_LIBRARY_PATH are not needed, this is for the future.
# Setting LHAPATH is always needed
if [ x${LHAPDFLOCATION} != x ]; then
  if [ ! -e config.csh ]; then
    echo "#!/bin/csh" > config.csh
    echo 'if( ! $?LD_LIBRARY_PATH ) then' >> config.csh
    echo "  setenv LD_LIBRARY_PATH ${LHAPDFLOCATION}" >> config.csh
    echo "else" >> config.csh
    echo "  setenv LD_LIBRARY_PATH" '${LD_LIBRARY_PATH}'":${LHAPDFLOCATION}" >> config.csh
    echo "endif" >> config.csh
    echo "setenv LHAPATH ${LHAPDFSETSLOCATION}" >> config.csh
    echo "#!/bin/sh" > config.sh
    echo 'if [ ! $?LD_LIBRARY_PATH ]; then' >> config.sh
    echo "  export LD_LIBRARY_PATH=${LHAPDFLOCATION}" >> config.sh
    echo fi >> config.sh
    echo 'if [ $?LD_LIBRARY_PATH ]; then' >> config.sh
    echo "  export LD_LIBRARY_PATH="'${LD_LIBRARY_PATH}'":${LHAPDFLOCATION}" >> config.sh
    echo fi >> config.sh
    echo "export LHAPATH=${LHAPDFSETSLOCATION}" >> config.sh
  else
    echo 'if( ! $?LD_LIBRARY_PATH ) then' >> config.csh
    echo "  setenv LD_LIBRARY_PATH ${LHAPDFLOCATION}" >> config.csh
    echo "else" >> config.csh
    echo "  setenv LD_LIBRARY_PATH" '${LD_LIBRARY_PATH}'":${LHAPDFLOCATION}" >> config.csh
    echo "endif" >> config.csh
    echo "setenv LHAPATH ${LHAPDFSETSLOCATION}" >> config.csh
    echo 'if [ ! $?LD_LIBRARY_PATH ]; then' >> config.sh
    echo "  export LD_LIBRARY_PATH=${LHAPDFLOCATION}" >> config.sh
    echo fi >> config.sh
    echo 'if [ $?LD_LIBRARY_PATH ]; then' >> config.sh
    echo "  export LD_LIBRARY_PATH="'${LD_LIBRARY_PATH}'":${LHAPDFLOCATION}" >> config.sh
    echo fi >> config.sh
    echo "export LHAPATH=${LHAPDFSETSLOCATION}" >> config.sh
  fi
fi
